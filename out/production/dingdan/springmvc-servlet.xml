<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
      http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context-3.2.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 扫描controller层的注解包 -->
	<context:component-scan base-package="cn.bdqn.ssm.controller" />
	<!-- <mvc:annotation-driven> 会自动注册handlerMapping处理引射器和 HaddlerAdapter处理器适配器 -->
	<mvc:annotation-driven conversion-service="myConversionService">
		<!-- json格式请求的字符集转换 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 通过FastJsonHttpMessageConverter中的features属性指定输出时的日期转换器WriteDateUseDateFormat -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteDateUseDateFormat</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 日期转换器 -->
	<bean id="myConversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="cn.bdqn.ssm.util.StringtoDateConverter">
					<constructor-arg type="java.lang.String" value="yyyy-MM-dd" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 静态资源文件引入 -->
	<mvc:resources location="/statics/" mapping="/statics/**"></mvc:resources>

	<!-- 配置多视图解析器，可以使同样的数据以不同的view显示 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=utf-8" />
				<entry key="json" value="application/json;charset=utf-8" />
				<entry key="xml" value="application/xml;charset=utf-8" />
			</map>
		</property>
		<!-- 配置视图解析器 -->
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>






















	<!-- 配置interceptors 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<mvc:mapping path="/bill/**" />
			<mvc:mapping path="/provider/**" />
			<mvc:mapping path="/role/**" />
			<bean class="cn.bdqn.ssm.Interceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 全局异常 SimpleMappingExceptionResolver -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- key 自定义异常的权限名 让loginController中 自定义的运行时异常提示信息在 error。jsp中显示 ，此处的error逻辑视图名 -->
				<prop key="java.lang.RuntimeException">error</prop>
			</props>
		</property>
	</bean>
	<!-- 配置MultipartResolver，用于上传文件，使用spring的CommonsMultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
</beans>   